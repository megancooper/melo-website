{"ast":null,"code":"var _jsxFileName = \"/Users/megan/Documents/files/dev/melo-website/src/components/button.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst Button = (_ref) => {\n  let {\n    children,\n    type,\n    disabled\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"type\", \"disabled\"]);\n\n  return __jsx(\"button\", _extends({\n    className: \"rounded-sm px-2 py-1 focus:outline-none\",\n    type: type,\n    disabled: disabled\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }), children);\n};\n\nButton.defaultProps = {\n  type: 'button',\n  onClick: () => {},\n  style: {},\n  disabled: false\n};\nexport default Button;","map":{"version":3,"sources":["/Users/megan/Documents/files/dev/melo-website/src/components/button.tsx"],"names":["Button","children","type","disabled","rest","defaultProps","onClick","style"],"mappings":";;;;;;;;;;AASA,MAAMA,MAAM,GAAG;AAAA,MAAC;AACdC,IAAAA,QADc;AACJC,IAAAA,IADI;AACEC,IAAAA;AADF,GAAD;AAAA,MACgBC,IADhB;;AAAA,SAGb;AACE,IAAA,SAAS,EAAC,yCADZ;AAEE,IAAA,IAAI,EAAEF,IAFR;AAGE,IAAA,QAAQ,EAAEC;AAHZ,KAIMC,IAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGH,QANH,CAHa;AAAA,CAAf;;AAaAD,MAAM,CAACK,YAAP,GAAsB;AACpBH,EAAAA,IAAI,EAAE,QADc;AAEpBI,EAAAA,OAAO,EAAE,MAAM,CAAE,CAFG;AAGpBC,EAAAA,KAAK,EAAE,EAHa;AAIpBJ,EAAAA,QAAQ,EAAE;AAJU,CAAtB;AAOA,eAAeH,MAAf","sourcesContent":["/* eslint-disable react/button-has-type */\ninterface Props {\n  children: Node | string,\n  disabled?: boolean,\n  type?: 'button' | 'submit' | 'reset',\n  style?: object,\n  onClick?: () => void\n}\n\nconst Button = ({\n  children, type, disabled, ...rest\n} : Props) => (\n  <button\n    className=\"rounded-sm px-2 py-1 focus:outline-none\"\n    type={type}\n    disabled={disabled}\n    {...rest}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  onClick: () => {},\n  style: {},\n  disabled: false,\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}